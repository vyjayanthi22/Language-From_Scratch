fhand =open("test_case.txt","r",encoding='utf-8')

keywords = ['for', 'if', 'elif', 'else', 'print']
separator = [';','(',')','{','}']
operator = ['+','-','/','%','*','++','<','>','=']
my_result = dict()

for element in fhand:
    # Separate code to identify elementings with inverted commas

    while element.find('"')>=0:
        for i in range(len(element)):
            k = element[i]
            if k == '"':
                for j in range(i+1,len(element)):
                    l = element[j]
                    k = k+l
                    if l =='"':
                        element = element.replace(k,' ',1)
                        i = j+1
                        if k in my_result.keys():
                            my_result[k]+=1
                        else:
                            my_result.update({k: 1})
                        break
            if i >= len(element):
                break

    # Separate code to identify ++ operator

    while element.find('++')>=0:
        for i in range(len(element)-1):
            k = element[i]
            if k == '+':
                l = element[i+1]
                k = k+l
                if l =='+':
                    element = element.replace(k,'  ',1)
                    i = i+1
                    if k in my_result.keys():
                        my_result[k]+=1
                    else:
                        my_result.update({k: 1})
            if i >= len(element):
                break

    words = element.split()

    # identifying special characters and replacing them with a space

    for word in words:
        for i in range(len(word)):
            k = word[i]
            if k in separator:
                word = word.replace(k,' ',1)
                if k in my_result.keys():
                    my_result[k] += 1
                else:
                    my_result.update({k: 1})
            if k in operator:
                word = word.replace(k, ' ', 1)
                if k in my_result.keys():
                    my_result[k] += 1
                else:
                    my_result.update({k: 1})
        new_words = word.split()
        for new_word in new_words:
            if new_word in my_result.keys():
                my_result[new_word] += 1
            else:
                my_result.update({new_word: 1})

print("Lexeme, Token, Count")

for key in my_result:
    if key[0] == '"':
        print('Literal,', key+',', my_result[key])
    elif key in keywords:
        print('Keyword,', key+',', my_result[key])
    elif key in operator:
        print('Operator,', key+',', my_result[key])
    elif key in separator:
        print('Separator,', key+',', my_result[key])
    else:
        try:
            new_key = int(key)
            print('Literal,', key+',', my_result[key])
        except:
            print('Identifier,', key+',', my_result[key])